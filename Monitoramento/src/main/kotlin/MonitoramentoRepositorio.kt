import org.springframework.jdbc.core.BeanPropertyRowMapper
import org.springframework.jdbc.core.JdbcTemplate
import java.time.format.DateTimeFormatter
class MonitoramentoRepositorio {
    lateinit var jdbcTemplate: JdbcTemplate

    fun iniciar() {
        var jdbcTemplate = Conexao().conectar()
    }


}

/*

fun iniciar(){
    jdbcTemplate = Conexao().conectar()
}

fun criarTabelas(){
    jdbcTemplate.execute("""
            create table filme (
            id int GENERATED BY DEFAULT AS IDENTITY primary key,
            nome varchar(45) not null,
            diretor varchar(40) not null,
            indicadoOscar double,
            custoProducao double
            )
        """.trimIndent())
}

fun adicionarFilme(novoFilme: Filme){
    jdbcTemplate.update(
        """
                insert into filme(nome, diretor, indicadoOscar, custoProducao)
                values
                ('${novoFilme.nome}','${novoFilme.diretor}', ${novoFilme.indicadoOscar}, ${novoFilme.custoProducao})
            """.trimIndent()
    )
}

fun consultarFilme(idFilme: Int): String{
    var mensagem = ""
    val ultimoCodigo = jdbcTemplate.queryForObject(
        """
                select max(id) from Filme
            """.trimIndent(), Int::class.java // indica que vai ser convertio p um objetivo Int
    )

    mensagem = if (idFilme in 1..ultimoCodigo!!){
        val filme = jdbcTemplate.queryForObject("""
            select * from filme where id = $idFilme
            """, BeanPropertyRowMapper(Filme::class.java))
        """
                    Filme com o id: ${filme?.id}
                    Nome: ${filme?.nome}
                    Diretor: ${filme?.diretor}
                    Indicado ao Oscar: ${if (filme.indicadoOscar) "Sim" else "Não"}
                    Custo de produção: R$${filme?.custoProducao}
                """.trimIndent()
    }else{
        "Não há filmes com esse ID"
    }

    return mensagem
}

fun excluirFilme(idFilme: Int): String{
    val linhasAfetadas = jdbcTemplate.update("""
            delete from filme where id = $idFilme
            """)
    val mensagem = "Foram afetadas $linhasAfetadas linhas"

    return mensagem
}
*/
